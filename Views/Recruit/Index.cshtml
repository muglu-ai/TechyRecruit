@model IEnumerable<TechyRecruit.Models.RecruitModel>
@using Syncfusion.EJ2

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="table-contains">
    <h1>List of Candidates for Recruitment</h1>
    <p>
        <a class="btn btn-success" asp-action="Create">Create New</a>
    </p>

    <form asp-action="Index" method="get">
        @using (Html.BeginForm("Index", "Recruit", FormMethod.Get))
        {
            <div class="input-group mb-3">
                <input type="text" class="form-control" name="SearchString" placeholder="Find by Location" value="@ViewData["CurrentFilter"]"/>
                <button type="submit" class="btn btn-primary">Search</button>
                <a class="btn btn-secondary" asp-action="Index">Back to Full List</a>
            </div>
            <a class="btn btn-primary" href="@Url.Action("DownloadFilteredRecruitsPdf", "Pdf", new { search = ViewData["CurrentFilter"] })">Download PDF</a>
        }
    </form>    
<div class="table-container">
    <div class="table-responsive">
        <table class="table table-grid">
            <thead>
            <tr>
                
                <th>
                    Recruiter
                    @* @Html.DisplayNameFor(model => model.Recruiter) *@
                </th>
                <th>
                    Opening Details
                    @* @Html.DisplayNameFor(model => model.OpeningDetails) *@
                </th>
                <th>
                    Candidate Name
                    @* @Html.DisplayNameFor(model => model.CandidateName) *@
                </th>
                <th>
                    Received Date
                    @* @Html.DisplayNameFor(model => model.ReceivedDate) *@
                </th>
                <th>
                    Contact Number
                    @* @Html.DisplayNameFor(model => model.ContactNumber) *@
                </th>
                <th>
                    Email
                    @* @Html.DisplayNameFor(model => model.Email) *@
                </th>
                <th>
                    Company
                    @* @Html.DisplayNameFor(model => model.Company) *@
                </th>
                <th>
                    Total Experience
                    @* @Html.DisplayNameFor(model => model.TotalExperience) *@
                </th>
                <th>
                    Relevant Experience
                    @* @Html.DisplayNameFor(model => model.RelevantExperience) *@
                </th>
                <th>
                    CCTC
                    @* @Html.DisplayNameFor(model => model.CCTC) *@
                </th>
                <th>
                    ECTC
                    @* @Html.DisplayNameFor(model => model.ECTC) *@
                </th>
                <th>
                    Current Location
                    @* @Html.DisplayNameFor(model => model.CurrentLocation) *@
                </th>
                <th>
                    Preferred Location
                    @* @Html.DisplayNameFor(model => model.PreferredLocation) *@
                </th>
                <th>
                    Notice Period Or Last Working Day
                    @* @Html.DisplayNameFor(model => model.NoticePeriodOrLastWorkingDay) *@
                </th>
                <th>
                    Holding Offer Or Package Amount
                    @* @Html.DisplayNameFor(model => model.HoldingOfferOrPackageAmount) *@
                </th>
                <th>
                    Experience In Cloud Platforms
                    @* @Html.DisplayNameFor(model => model.ExperienceInCloudPlatforms) *@
                </th>
                <th>
                    Experience In Lead Handling
                    @* @Html.DisplayNameFor(model => model.ExperienceInLeadHandling) *@
                </th>
                <th>
                    Experience In Performance Testing
                    @* @Html.DisplayNameFor(model => model.ExperienceInPerformanceTesting) *@
                </th>
                <th>
                    Contract Role Required
                    @* @Html.DisplayNameFor(model => model.ContractRoleRequired) *@
                </th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Recruiter)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OpeningDetails)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CandidateName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReceivedDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ContactNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Company)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TotalExperience)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RelevantExperience)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CCTC)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ECTC)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CurrentLocation)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PreferredLocation)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NoticePeriodOrLastWorkingDay)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HoldingOfferOrPackageAmount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ExperienceInCloudPlatforms)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ExperienceInLeadHandling)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ExperienceInPerformanceTesting)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ContractRoleRequired)
                    </td>
                    <td>
                        <a button class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a button class="btn btn-outline-primary" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a button class="btn btn-outline-primary" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>

                </tr>
            }
                </tbody>
            </table>
        </div>
    </div>
</div>

@* <script> *@
@*     // document.addEventListener('DOMContentLoaded', function () { *@
@*     //     // Get a reference to the existing grid instance *@
@*     //     let grid = ej.grids.Grid.getGridInstance(document.querySelector('#Grid')); *@
@*     // *@
@*     //     // Update the data source of the existing grid *@
@*     //     grid.dataSource = @Html.Raw(Json.Serialize(Model)); // This binds the data to the grid *@
@*     // *@
@*     //     // Call the refresh method to apply the changes *@
@*     //     grid.refresh(); *@
@*     // }); *@
@* </script> *@
